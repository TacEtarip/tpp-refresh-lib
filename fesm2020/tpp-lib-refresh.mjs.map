{"version":3,"file":"tpp-lib-refresh.mjs","sources":["../../../projects/tpp-lib-refresh/src/lib/tpp-lib-refresh.service.ts","../../../projects/tpp-lib-refresh/src/lib/tpp-lib-refresh.component.ts","../../../projects/tpp-lib-refresh/src/lib/tpp-lib-refresh.module.ts","../../../projects/tpp-lib-refresh/src/public-api.ts","../../../projects/tpp-lib-refresh/src/tpp-lib-refresh.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse,\n  HttpClient,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\nimport { catchError, switchMap, filter, take } from 'rxjs/operators';\n@Injectable()\nexport class TppLibRefreshService implements HttpInterceptor {\n  // port_credenciales\n  private refreshTokenInProgress = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(\n    null\n  );\n  constructor(@Inject('config') private config, private _http: HttpClient) {\n    // this.port_credenciales=config.url//\"https://7wm9bk5qsj.execute-api.us-east-1.amazonaws.com/dev\"\n  }\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('idToken');\n    if (!token) {\n      return next.handle(req);\n    }\n    // const headers =\n    return next.handle(this.addToken(req)).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.status === 401) {\n          return this.handle401(req, next);\n          // return this.refresh(req,next)\n        }\n        return throwError(err);\n      })\n    );\n  }\n  handle401(req: HttpRequest<any>, next: HttpHandler) {\n    if (this.refreshTokenInProgress) {\n      return this.refreshTokenSubject.pipe(\n        filter((result) => result !== null),\n        take(1),\n        switchMap(() => next.handle(this.addToken(req)))\n      );\n    } else {\n      this.refreshTokenInProgress = true;\n      this.refreshTokenSubject.next(null);\n\n      return this.refresh().pipe(\n        switchMap((token) => {\n          this.setDataToken(token);\n          this.refreshTokenInProgress = false;\n          return next.handle(this.addToken(req));\n        })\n      );\n    }\n  }\n\n  addToken(req: HttpRequest<any>) {\n    const token = localStorage.getItem('idToken');\n    return req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`),\n    });\n  }\n  refresh() {\n    let refreshToken = { refreshToken: localStorage.getItem('refreshToken') };\n\n    return this._http.post(this.config.url + '/oauth/refresh', refreshToken);\n  }\n\n  setDataToken(data) {\n    let resp = data;\n    let usuario_inicio: any = resp;\n    let tokenData: any = usuario_inicio.tokenData;\n    // token\n    localStorage.setItem('accessToken', tokenData.accessToken);\n    localStorage.setItem('expiresIn', tokenData.expiresIn);\n    localStorage.setItem('tokenType', tokenData.tokenType);\n    // localStorage.setItem(\"refreshToken\",tokenData.refreshToken);\n    localStorage.setItem('idToken', tokenData.idToken);\n    // decode idToken\n    localStorage.setItem('finishToken', this.expireToken());\n    localStorage.setItem('initToken', this.initToken());\n  }\n  expireToken() {\n    const token = localStorage.getItem('idToken');\n    let base64Url = token.split('.')[1];\n    let decodedValue = JSON.parse(window.atob(base64Url));\n    return decodedValue.exp;\n  }\n  initToken() {\n    const token = localStorage.getItem('idToken');\n    let base64Url = token.split('.')[1];\n    let decodedValue = JSON.parse(window.atob(base64Url));\n    return decodedValue.iat;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-tpp-lib-refresh',\n  template: ` <p>tpp-lib-refresh works!</p> `,\n  styles: [],\n})\nexport class TppLibRefreshComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TppLibRefreshComponent } from './tpp-lib-refresh.component';\nimport { TppLibRefreshService } from './tpp-lib-refresh.service';\n\n@NgModule({\n  declarations: [TppLibRefreshComponent],\n  imports: [],\n  exports: [TppLibRefreshComponent],\n})\nexport class TppLibRefreshModule {\n  public static forRoot(config): ModuleWithProviders<TppLibRefreshModule> {\n    return {\n      ngModule: TppLibRefreshModule,\n      providers: [\n        TppLibRefreshService,\n        { provide: 'config', useValue: config },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of tpp-lib-refresh\n */\n\nexport * from './lib/tpp-lib-refresh.service';\nexport * from './lib/tpp-lib-refresh.component';\nexport * from './lib/tpp-lib-refresh.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}